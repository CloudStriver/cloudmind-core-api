// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: cloudmind/core_api/platform.proto

package core_api

import (
	_ "github.com/CloudStriver/cloudmind-core-api/biz/application/dto/basic"
	_ "github.com/CloudStriver/cloudmind-core-api/biz/application/dto/http"
	_ "github.com/CloudStriver/cloudmind-core-api/biz/application/dto/platform"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string   `protobuf:"bytes,1,opt,name=subjectId,proto3" json:"subjectId" form:"subjectId" query:"subjectId"`
	RootId    string   `protobuf:"bytes,2,opt,name=rootId,proto3" json:"rootId" form:"rootId" query:"rootId"`
	FatherId  string   `protobuf:"bytes,3,opt,name=fatherId,proto3" json:"fatherId" form:"fatherId" query:"fatherId"`
	LabelIds  []string `protobuf:"bytes,4,rep,name=labelIds,proto3" json:"labelIds" form:"labelIds" query:"labelIds"` // 标签id列表：作者点赞，作者回复等
	AtUserId  string   `protobuf:"bytes,5,opt,name=atUserId,proto3" json:"atUserId" form:"atUserId" query:"atUserId"` // @谁
	Content   string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content" form:"content" query:"content"`     // 内容
	Meta      string   `protobuf:"bytes,7,opt,name=meta,proto3" json:"meta" form:"meta" query:"meta"`                 // 皮肤，字体等
}

func (x *CreateCommentReq) Reset() {
	*x = CreateCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentReq) ProtoMessage() {}

func (x *CreateCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentReq.ProtoReflect.Descriptor instead.
func (*CreateCommentReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCommentReq) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *CreateCommentReq) GetRootId() string {
	if x != nil {
		return x.RootId
	}
	return ""
}

func (x *CreateCommentReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *CreateCommentReq) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *CreateCommentReq) GetAtUserId() string {
	if x != nil {
		return x.AtUserId
	}
	return ""
}

func (x *CreateCommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateCommentReq) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

type CreateCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=commentId,proto3" json:"commentId" form:"commentId" query:"commentId"`
}

func (x *CreateCommentResp) Reset() {
	*x = CreateCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResp) ProtoMessage() {}

func (x *CreateCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResp.ProtoReflect.Descriptor instead.
func (*CreateCommentResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCommentResp) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type GetCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=commentId,proto3" json:"commentId" form:"commentId" query:"commentId"`
}

func (x *GetCommentReq) Reset() {
	*x = GetCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentReq) ProtoMessage() {}

func (x *GetCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentReq.ProtoReflect.Descriptor instead.
func (*GetCommentReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{2}
}

func (x *GetCommentReq) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type GetCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId       string           `protobuf:"bytes,1,opt,name=subjectId,proto3" json:"subjectId" form:"subjectId" query:"subjectId"`
	RootId          string           `protobuf:"bytes,2,opt,name=rootId,proto3" json:"rootId" form:"rootId" query:"rootId"`
	FatherId        string           `protobuf:"bytes,3,opt,name=fatherId,proto3" json:"fatherId" form:"fatherId" query:"fatherId"`
	Count           int64            `protobuf:"varint,4,opt,name=count,proto3" json:"count" form:"count" query:"count"`                      // 回复数
	State           int64            `protobuf:"varint,5,opt,name=state,proto3" json:"state" form:"state" query:"state"`                      // 1: 正常, 2: 删除
	Attrs           int64            `protobuf:"varint,6,opt,name=attrs,proto3" json:"attrs" form:"attrs" query:"attrs"`                      // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
	Labels          []string         `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels" form:"labels" query:"labels"`                   // 标签：作者点赞，作者回复等
	UserId          string           `protobuf:"bytes,8,opt,name=userId,proto3" json:"userId" form:"userId" query:"userId"`                   // 评论者
	AtUserId        string           `protobuf:"bytes,9,opt,name=atUserId,proto3" json:"atUserId" form:"atUserId" query:"atUserId"`           // @谁
	Content         string           `protobuf:"bytes,10,opt,name=content,proto3" json:"content" form:"content" query:"content"`              // 内容
	Meta            string           `protobuf:"bytes,11,opt,name=meta,proto3" json:"meta" form:"meta" query:"meta"`                          // 皮肤，字体等
	CreateAt        int64            `protobuf:"varint,12,opt,name=createAt,proto3" json:"createAt" form:"createAt" query:"createAt"`         // 创建时间
	LikedCount      int64            `protobuf:"varint,13,opt,name=likedCount,proto3" json:"likedCount" form:"likedCount" query:"likedCount"` // 点赞数
	HatedCount      int64            `protobuf:"varint,14,opt,name=hatedCount,proto3" json:"hatedCount" form:"hatedCount" query:"hatedCount"`
	Author          *SimpleUser      `protobuf:"bytes,15,opt,name=author,proto3" json:"author" form:"author" query:"author"`                                     // 评论者信息
	CommentRelation *CommentRelation `protobuf:"bytes,16,opt,name=commentRelation,proto3" json:"commentRelation" form:"commentRelation" query:"commentRelation"` // 评论关系信息
}

func (x *GetCommentResp) Reset() {
	*x = GetCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentResp) ProtoMessage() {}

func (x *GetCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentResp.ProtoReflect.Descriptor instead.
func (*GetCommentResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{3}
}

func (x *GetCommentResp) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *GetCommentResp) GetRootId() string {
	if x != nil {
		return x.RootId
	}
	return ""
}

func (x *GetCommentResp) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *GetCommentResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetCommentResp) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GetCommentResp) GetAttrs() int64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *GetCommentResp) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetCommentResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCommentResp) GetAtUserId() string {
	if x != nil {
		return x.AtUserId
	}
	return ""
}

func (x *GetCommentResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetCommentResp) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *GetCommentResp) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *GetCommentResp) GetLikedCount() int64 {
	if x != nil {
		return x.LikedCount
	}
	return 0
}

func (x *GetCommentResp) GetHatedCount() int64 {
	if x != nil {
		return x.HatedCount
	}
	return 0
}

func (x *GetCommentResp) GetAuthor() *SimpleUser {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *GetCommentResp) GetCommentRelation() *CommentRelation {
	if x != nil {
		return x.CommentRelation
	}
	return nil
}

type GetCommentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyUserId    *string `protobuf:"bytes,1,opt,name=onlyUserId,proto3,oneof" json:"onlyUserId" form:"onlyUserId" query:"onlyUserId"`
	OnlyAtUserId  *string `protobuf:"bytes,2,opt,name=onlyAtUserId,proto3,oneof" json:"onlyAtUserId" form:"onlyAtUserId" query:"onlyAtUserId"`
	OnlySubjectId *string `protobuf:"bytes,3,opt,name=onlySubjectId,proto3,oneof" json:"onlySubjectId" form:"onlySubjectId" query:"onlySubjectId"`
	OnlyRootId    *string `protobuf:"bytes,4,opt,name=onlyRootId,proto3,oneof" json:"onlyRootId" form:"onlyRootId" query:"onlyRootId"`
	OnlyFatherId  *string `protobuf:"bytes,5,opt,name=onlyFatherId,proto3,oneof" json:"onlyFatherId" form:"onlyFatherId" query:"onlyFatherId"`
	OnlyState     *int64  `protobuf:"varint,6,opt,name=onlyState,proto3,oneof" json:"onlyState" form:"onlyState" query:"onlyState"`
	OnlyAttrs     *int64  `protobuf:"varint,7,opt,name=onlyAttrs,proto3,oneof" json:"onlyAttrs" form:"onlyAttrs" query:"onlyAttrs"`
	Limit         *int64  `protobuf:"varint,8,opt,name=limit,proto3,oneof" json:"limit" form:"limit" query:"limit"`
	LastToken     *string `protobuf:"bytes,9,opt,name=lastToken,proto3,oneof" json:"lastToken" form:"lastToken" query:"lastToken"`
	Backward      *bool   `protobuf:"varint,10,opt,name=backward,proto3,oneof" json:"backward" form:"backward" query:"backward"`
	Offset        *int64  `protobuf:"varint,11,opt,name=offset,proto3,oneof" json:"offset" form:"offset" query:"offset"`
}

func (x *GetCommentsReq) Reset() {
	*x = GetCommentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsReq) ProtoMessage() {}

func (x *GetCommentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsReq.ProtoReflect.Descriptor instead.
func (*GetCommentsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommentsReq) GetOnlyUserId() string {
	if x != nil && x.OnlyUserId != nil {
		return *x.OnlyUserId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlyAtUserId() string {
	if x != nil && x.OnlyAtUserId != nil {
		return *x.OnlyAtUserId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlySubjectId() string {
	if x != nil && x.OnlySubjectId != nil {
		return *x.OnlySubjectId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlyRootId() string {
	if x != nil && x.OnlyRootId != nil {
		return *x.OnlyRootId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlyFatherId() string {
	if x != nil && x.OnlyFatherId != nil {
		return *x.OnlyFatherId
	}
	return ""
}

func (x *GetCommentsReq) GetOnlyState() int64 {
	if x != nil && x.OnlyState != nil {
		return *x.OnlyState
	}
	return 0
}

func (x *GetCommentsReq) GetOnlyAttrs() int64 {
	if x != nil && x.OnlyAttrs != nil {
		return *x.OnlyAttrs
	}
	return 0
}

func (x *GetCommentsReq) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetCommentsReq) GetLastToken() string {
	if x != nil && x.LastToken != nil {
		return *x.LastToken
	}
	return ""
}

func (x *GetCommentsReq) GetBackward() bool {
	if x != nil && x.Backward != nil {
		return *x.Backward
	}
	return false
}

func (x *GetCommentsReq) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetCommentsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments" form:"comments" query:"comments"`
	Total    int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total" query:"total"`
	Token    string     `protobuf:"bytes,3,opt,name=token,proto3" json:"token" form:"token" query:"token"`
}

func (x *GetCommentsResp) Reset() {
	*x = GetCommentsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsResp) ProtoMessage() {}

func (x *GetCommentsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsResp.ProtoReflect.Descriptor instead.
func (*GetCommentsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommentsResp) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetCommentsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetCommentsResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetCommentBlocksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string  `protobuf:"bytes,1,opt,name=subjectId,proto3" json:"subjectId" form:"subjectId" query:"subjectId"`
	RootId    string  `protobuf:"bytes,2,opt,name=rootId,proto3" json:"rootId" form:"rootId" query:"rootId"`
	Limit     *int64  `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit" form:"limit" query:"limit"`
	LastToken *string `protobuf:"bytes,4,opt,name=lastToken,proto3,oneof" json:"lastToken" form:"lastToken" query:"lastToken"`
	Backward  *bool   `protobuf:"varint,5,opt,name=backward,proto3,oneof" json:"backward" form:"backward" query:"backward"`
	Offset    *int64  `protobuf:"varint,6,opt,name=offset,proto3,oneof" json:"offset" form:"offset" query:"offset"`
}

func (x *GetCommentBlocksReq) Reset() {
	*x = GetCommentBlocksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentBlocksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentBlocksReq) ProtoMessage() {}

func (x *GetCommentBlocksReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentBlocksReq.ProtoReflect.Descriptor instead.
func (*GetCommentBlocksReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{6}
}

func (x *GetCommentBlocksReq) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *GetCommentBlocksReq) GetRootId() string {
	if x != nil {
		return x.RootId
	}
	return ""
}

func (x *GetCommentBlocksReq) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetCommentBlocksReq) GetLastToken() string {
	if x != nil && x.LastToken != nil {
		return *x.LastToken
	}
	return ""
}

func (x *GetCommentBlocksReq) GetBackward() bool {
	if x != nil && x.Backward != nil {
		return *x.Backward
	}
	return false
}

func (x *GetCommentBlocksReq) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetCommentBlocksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentBlocks []*CommentBlock `protobuf:"bytes,1,rep,name=commentBlocks,proto3" json:"commentBlocks" form:"commentBlocks" query:"commentBlocks"`
	Total         int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total" query:"total"`
	Token         string          `protobuf:"bytes,3,opt,name=token,proto3" json:"token" form:"token" query:"token"`
}

func (x *GetCommentBlocksResp) Reset() {
	*x = GetCommentBlocksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentBlocksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentBlocksResp) ProtoMessage() {}

func (x *GetCommentBlocksResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentBlocksResp.ProtoReflect.Descriptor instead.
func (*GetCommentBlocksResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{7}
}

func (x *GetCommentBlocksResp) GetCommentBlocks() []*CommentBlock {
	if x != nil {
		return x.CommentBlocks
	}
	return nil
}

func (x *GetCommentBlocksResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetCommentBlocksResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UpdateCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string   `protobuf:"bytes,1,opt,name=commentId,proto3" json:"commentId" form:"commentId" query:"commentId"`
	State     State    `protobuf:"varint,2,opt,name=state,proto3,enum=cloudmind.core_api.State" json:"state" form:"state" query:"state"` // 1: 正常, 2: 删除
	LabelIds  []string `protobuf:"bytes,3,rep,name=labelIds,proto3" json:"labelIds" form:"labelIds" query:"labelIds"`                    // 标签：作者点赞，作者回复等
}

func (x *UpdateCommentReq) Reset() {
	*x = UpdateCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentReq) ProtoMessage() {}

func (x *UpdateCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentReq.ProtoReflect.Descriptor instead.
func (*UpdateCommentReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCommentReq) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *UpdateCommentReq) GetState() State {
	if x != nil {
		return x.State
	}
	return State_UnknownState
}

func (x *UpdateCommentReq) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type UpdateCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCommentResp) Reset() {
	*x = UpdateCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentResp) ProtoMessage() {}

func (x *UpdateCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentResp.ProtoReflect.Descriptor instead.
func (*UpdateCommentResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{9}
}

type DeleteCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId string `protobuf:"bytes,1,opt,name=commentId,proto3" json:"commentId" form:"commentId" query:"commentId"`
}

func (x *DeleteCommentReq) Reset() {
	*x = DeleteCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentReq) ProtoMessage() {}

func (x *DeleteCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentReq.ProtoReflect.Descriptor instead.
func (*DeleteCommentReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCommentReq) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type DeleteCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCommentResp) Reset() {
	*x = DeleteCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResp) ProtoMessage() {}

func (x *DeleteCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResp.ProtoReflect.Descriptor instead.
func (*DeleteCommentResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{11}
}

type SetCommentAttrsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id" query:"id"`
	Attrs Attrs  `protobuf:"varint,2,opt,name=attrs,proto3,enum=cloudmind.core_api.Attrs" json:"attrs" form:"attrs" query:"attrs"`
}

func (x *SetCommentAttrsReq) Reset() {
	*x = SetCommentAttrsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommentAttrsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentAttrsReq) ProtoMessage() {}

func (x *SetCommentAttrsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentAttrsReq.ProtoReflect.Descriptor instead.
func (*SetCommentAttrsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{12}
}

func (x *SetCommentAttrsReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetCommentAttrsReq) GetAttrs() Attrs {
	if x != nil {
		return x.Attrs
	}
	return Attrs_UnknownAttrs
}

type SetCommentAttrsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetCommentAttrsResp) Reset() {
	*x = SetCommentAttrsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommentAttrsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentAttrsResp) ProtoMessage() {}

func (x *SetCommentAttrsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentAttrsResp.ProtoReflect.Descriptor instead.
func (*SetCommentAttrsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{13}
}

type GetCommentSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string `protobuf:"bytes,1,opt,name=subjectId,proto3" json:"subjectId" form:"subjectId" query:"subjectId"`
}

func (x *GetCommentSubjectReq) Reset() {
	*x = GetCommentSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentSubjectReq) ProtoMessage() {}

func (x *GetCommentSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentSubjectReq.ProtoReflect.Descriptor instead.
func (*GetCommentSubjectReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{14}
}

func (x *GetCommentSubjectReq) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

type GetCommentSubjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId" form:"userId" query:"userId"`
	TopCommentId string `protobuf:"bytes,2,opt,name=topCommentId,proto3" json:"topCommentId" form:"topCommentId" query:"topCommentId"`
	RootCount    int64  `protobuf:"varint,3,opt,name=rootCount,proto3" json:"rootCount" form:"rootCount" query:"rootCount"`
	AllCount     int64  `protobuf:"varint,4,opt,name=allCount,proto3" json:"allCount" form:"allCount" query:"allCount"`
	State        int64  `protobuf:"varint,5,opt,name=state,proto3" json:"state" form:"state" query:"state"` // 1: 正常, 2: 删除
	Attrs        int64  `protobuf:"varint,6,opt,name=attrs,proto3" json:"attrs" form:"attrs" query:"attrs"` // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
}

func (x *GetCommentSubjectResp) Reset() {
	*x = GetCommentSubjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentSubjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentSubjectResp) ProtoMessage() {}

func (x *GetCommentSubjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentSubjectResp.ProtoReflect.Descriptor instead.
func (*GetCommentSubjectResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{15}
}

func (x *GetCommentSubjectResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCommentSubjectResp) GetTopCommentId() string {
	if x != nil {
		return x.TopCommentId
	}
	return ""
}

func (x *GetCommentSubjectResp) GetRootCount() int64 {
	if x != nil {
		return x.RootCount
	}
	return 0
}

func (x *GetCommentSubjectResp) GetAllCount() int64 {
	if x != nil {
		return x.AllCount
	}
	return 0
}

func (x *GetCommentSubjectResp) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GetCommentSubjectResp) GetAttrs() int64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

type UpdateCommentSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string `protobuf:"bytes,1,opt,name=subjectId,proto3" json:"subjectId" form:"subjectId" query:"subjectId"`
	State     State  `protobuf:"varint,2,opt,name=state,proto3,enum=cloudmind.core_api.State" json:"state" form:"state" query:"state"` // 1: 正常, 2: 删除
	Attrs     Attrs  `protobuf:"varint,3,opt,name=attrs,proto3,enum=cloudmind.core_api.Attrs" json:"attrs" form:"attrs" query:"attrs"` // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
}

func (x *UpdateCommentSubjectReq) Reset() {
	*x = UpdateCommentSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentSubjectReq) ProtoMessage() {}

func (x *UpdateCommentSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentSubjectReq.ProtoReflect.Descriptor instead.
func (*UpdateCommentSubjectReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateCommentSubjectReq) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *UpdateCommentSubjectReq) GetState() State {
	if x != nil {
		return x.State
	}
	return State_UnknownState
}

func (x *UpdateCommentSubjectReq) GetAttrs() Attrs {
	if x != nil {
		return x.Attrs
	}
	return Attrs_UnknownAttrs
}

type UpdateCommentSubjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCommentSubjectResp) Reset() {
	*x = UpdateCommentSubjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentSubjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentSubjectResp) ProtoMessage() {}

func (x *UpdateCommentSubjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentSubjectResp.ProtoReflect.Descriptor instead.
func (*UpdateCommentSubjectResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{17}
}

type DeleteCommentSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectId string `protobuf:"bytes,1,opt,name=subjectId,proto3" json:"subjectId" form:"subjectId" query:"subjectId"`
}

func (x *DeleteCommentSubjectReq) Reset() {
	*x = DeleteCommentSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentSubjectReq) ProtoMessage() {}

func (x *DeleteCommentSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentSubjectReq.ProtoReflect.Descriptor instead.
func (*DeleteCommentSubjectReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteCommentSubjectReq) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

type DeleteCommentSubjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCommentSubjectResp) Reset() {
	*x = DeleteCommentSubjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentSubjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentSubjectResp) ProtoMessage() {}

func (x *DeleteCommentSubjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentSubjectResp.ProtoReflect.Descriptor instead.
func (*DeleteCommentSubjectResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{19}
}

type CreateLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FatherId string `protobuf:"bytes,1,opt,name=fatherId,proto3" json:"fatherId" form:"fatherId" query:"fatherId"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value" form:"value" query:"value"`
}

func (x *CreateLabelReq) Reset() {
	*x = CreateLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabelReq) ProtoMessage() {}

func (x *CreateLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabelReq.ProtoReflect.Descriptor instead.
func (*CreateLabelReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{20}
}

func (x *CreateLabelReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *CreateLabelReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CreateLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId string `protobuf:"bytes,1,opt,name=labelId,proto3" json:"labelId" form:"labelId" query:"labelId"`
}

func (x *CreateLabelResp) Reset() {
	*x = CreateLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabelResp) ProtoMessage() {}

func (x *CreateLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabelResp.ProtoReflect.Descriptor instead.
func (*CreateLabelResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{21}
}

func (x *CreateLabelResp) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

type DeleteLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId string `protobuf:"bytes,1,opt,name=labelId,proto3" json:"labelId" form:"labelId" query:"labelId"`
}

func (x *DeleteLabelReq) Reset() {
	*x = DeleteLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLabelReq) ProtoMessage() {}

func (x *DeleteLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLabelReq.ProtoReflect.Descriptor instead.
func (*DeleteLabelReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteLabelReq) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

type DeleteLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLabelResp) Reset() {
	*x = DeleteLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLabelResp) ProtoMessage() {}

func (x *DeleteLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLabelResp.ProtoReflect.Descriptor instead.
func (*DeleteLabelResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{23}
}

type GetLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId string `protobuf:"bytes,1,opt,name=labelId,proto3" json:"labelId" form:"labelId" query:"labelId"`
}

func (x *GetLabelReq) Reset() {
	*x = GetLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelReq) ProtoMessage() {}

func (x *GetLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelReq.ProtoReflect.Descriptor instead.
func (*GetLabelReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{24}
}

func (x *GetLabelReq) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

type GetLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label" form:"label" query:"label"`
}

func (x *GetLabelResp) Reset() {
	*x = GetLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelResp) ProtoMessage() {}

func (x *GetLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelResp.ProtoReflect.Descriptor instead.
func (*GetLabelResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{25}
}

func (x *GetLabelResp) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type UpdateLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId  string `protobuf:"bytes,1,opt,name=labelId,proto3" json:"labelId" form:"labelId" query:"labelId"`
	FatherId string `protobuf:"bytes,2,opt,name=fatherId,proto3" json:"fatherId" form:"fatherId" query:"fatherId"`
	Value    string `protobuf:"bytes,3,opt,name=value,proto3" json:"value" form:"value" query:"value"`
}

func (x *UpdateLabelReq) Reset() {
	*x = UpdateLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelReq) ProtoMessage() {}

func (x *UpdateLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelReq.ProtoReflect.Descriptor instead.
func (*UpdateLabelReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateLabelReq) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

func (x *UpdateLabelReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *UpdateLabelReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UpdateLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLabelResp) Reset() {
	*x = UpdateLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelResp) ProtoMessage() {}

func (x *UpdateLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelResp.ProtoReflect.Descriptor instead.
func (*UpdateLabelResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{27}
}

type GetLabelsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       *string `protobuf:"bytes,1,opt,name=key,proto3,oneof" json:"key" form:"key" query:"key"` // 用于匹配标签的key
	Limit     *int64  `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit" form:"limit" query:"limit"`
	LastToken *string `protobuf:"bytes,3,opt,name=lastToken,proto3,oneof" json:"lastToken" form:"lastToken" query:"lastToken"`
	Backward  *bool   `protobuf:"varint,4,opt,name=backward,proto3,oneof" json:"backward" form:"backward" query:"backward"`
	Offset    *int64  `protobuf:"varint,5,opt,name=offset,proto3,oneof" json:"offset" form:"offset" query:"offset"`
	FatherId  *string `protobuf:"bytes,6,opt,name=fatherId,proto3,oneof" json:"fatherId" form:"fatherId" query:"fatherId"`
}

func (x *GetLabelsReq) Reset() {
	*x = GetLabelsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelsReq) ProtoMessage() {}

func (x *GetLabelsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelsReq.ProtoReflect.Descriptor instead.
func (*GetLabelsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{28}
}

func (x *GetLabelsReq) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *GetLabelsReq) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetLabelsReq) GetLastToken() string {
	if x != nil && x.LastToken != nil {
		return *x.LastToken
	}
	return ""
}

func (x *GetLabelsReq) GetBackward() bool {
	if x != nil && x.Backward != nil {
		return *x.Backward
	}
	return false
}

func (x *GetLabelsReq) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *GetLabelsReq) GetFatherId() string {
	if x != nil && x.FatherId != nil {
		return *x.FatherId
	}
	return ""
}

type GetLabelsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []*Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels" form:"labels" query:"labels"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total" query:"total"`
	Token  string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token" form:"token" query:"token"`
}

func (x *GetLabelsResp) Reset() {
	*x = GetLabelsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelsResp) ProtoMessage() {}

func (x *GetLabelsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelsResp.ProtoReflect.Descriptor instead.
func (*GetLabelsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{29}
}

func (x *GetLabelsResp) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetLabelsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetLabelsResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetLabelsInBatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids" form:"ids" query:"ids"`
}

func (x *GetLabelsInBatchReq) Reset() {
	*x = GetLabelsInBatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelsInBatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelsInBatchReq) ProtoMessage() {}

func (x *GetLabelsInBatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelsInBatchReq.ProtoReflect.Descriptor instead.
func (*GetLabelsInBatchReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{30}
}

func (x *GetLabelsInBatchReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetLabelsInBatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels" form:"labels" query:"labels"`
}

func (x *GetLabelsInBatchResp) Reset() {
	*x = GetLabelsInBatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLabelsInBatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLabelsInBatchResp) ProtoMessage() {}

func (x *GetLabelsInBatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLabelsInBatchResp.ProtoReflect.Descriptor instead.
func (*GetLabelsInBatchResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{31}
}

func (x *GetLabelsInBatchResp) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromType     TargetType   `protobuf:"varint,1,opt,name=fromType,proto3,enum=cloudmind.core_api.TargetType" json:"fromType" form:"fromType" query:"fromType"`
	FromId       string       `protobuf:"bytes,2,opt,name=fromId,proto3" json:"fromId" form:"fromId" query:"fromId"`
	ToType       TargetType   `protobuf:"varint,3,opt,name=toType,proto3,enum=cloudmind.core_api.TargetType" json:"toType" form:"toType" query:"toType"`
	ToId         string       `protobuf:"bytes,4,opt,name=toId,proto3" json:"toId" form:"toId" query:"toId"`
	RelationType RelationType `protobuf:"varint,5,opt,name=relationType,proto3,enum=cloudmind.core_api.RelationType" json:"relationType" form:"relationType" query:"relationType"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{32}
}

func (x *Relation) GetFromType() TargetType {
	if x != nil {
		return x.FromType
	}
	return TargetType_UnKnowTargetType
}

func (x *Relation) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *Relation) GetToType() TargetType {
	if x != nil {
		return x.ToType
	}
	return TargetType_UnKnowTargetType
}

func (x *Relation) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *Relation) GetRelationType() RelationType {
	if x != nil {
		return x.RelationType
	}
	return RelationType_UnKnowRelationType
}

type CreateRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToId         string       `protobuf:"bytes,1,opt,name=toId,proto3" json:"toId" form:"toId" query:"toId"`
	ToType       TargetType   `protobuf:"varint,2,opt,name=toType,proto3,enum=cloudmind.core_api.TargetType" json:"toType" form:"toType" query:"toType" vd:"$ >= 1 && $ <= 4"`
	RelationType RelationType `protobuf:"varint,3,opt,name=relationType,proto3,enum=cloudmind.core_api.RelationType" json:"relationType" form:"relationType" query:"relationType" vd:"$ >= 1 && $ <= 10"`
}

func (x *CreateRelationReq) Reset() {
	*x = CreateRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationReq) ProtoMessage() {}

func (x *CreateRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationReq.ProtoReflect.Descriptor instead.
func (*CreateRelationReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{33}
}

func (x *CreateRelationReq) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *CreateRelationReq) GetToType() TargetType {
	if x != nil {
		return x.ToType
	}
	return TargetType_UnKnowTargetType
}

func (x *CreateRelationReq) GetRelationType() RelationType {
	if x != nil {
		return x.RelationType
	}
	return RelationType_UnKnowRelationType
}

type CreateRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRelationResp) Reset() {
	*x = CreateRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationResp) ProtoMessage() {}

func (x *CreateRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationResp.ProtoReflect.Descriptor instead.
func (*CreateRelationResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{34}
}

type GetFromRelationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromId       string     `protobuf:"bytes,1,opt,name=fromId,proto3" json:"fromId" form:"fromId" query:"fromId"`
	FromType     int64      `protobuf:"varint,2,opt,name=fromType,proto3" json:"fromType" form:"fromType" query:"fromType" vd:"$ >= 1 && $ <= 4"`
	ToType       TargetType `protobuf:"varint,3,opt,name=toType,proto3,enum=cloudmind.core_api.TargetType" json:"toType" form:"toType" query:"toType" vd:"$ >= 1 && $ <= 4"`
	RelationType int64      `protobuf:"varint,4,opt,name=relationType,proto3" json:"relationType" form:"relationType" query:"relationType" vd:"$ >= 1 && $ <= 10"`
	Limit        *int64     `protobuf:"varint,5,opt,name=limit,proto3,oneof" json:"limit" form:"limit" query:"limit"`
	Offset       *int64     `protobuf:"varint,6,opt,name=offset,proto3,oneof" json:"offset" form:"offset" query:"offset"`
}

func (x *GetFromRelationsReq) Reset() {
	*x = GetFromRelationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFromRelationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFromRelationsReq) ProtoMessage() {}

func (x *GetFromRelationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFromRelationsReq.ProtoReflect.Descriptor instead.
func (*GetFromRelationsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{35}
}

func (x *GetFromRelationsReq) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *GetFromRelationsReq) GetFromType() int64 {
	if x != nil {
		return x.FromType
	}
	return 0
}

func (x *GetFromRelationsReq) GetToType() TargetType {
	if x != nil {
		return x.ToType
	}
	return TargetType_UnKnowTargetType
}

func (x *GetFromRelationsReq) GetRelationType() int64 {
	if x != nil {
		return x.RelationType
	}
	return 0
}

func (x *GetFromRelationsReq) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetFromRelationsReq) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetFromRelationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User       `protobuf:"bytes,1,rep,name=users,proto3" json:"users" form:"users" query:"users"`
	Files []*PublicFile `protobuf:"bytes,2,rep,name=files,proto3" json:"files" form:"files" query:"files"`
	Posts []*Post       `protobuf:"bytes,3,rep,name=posts,proto3" json:"posts" form:"posts" query:"posts"`
}

func (x *GetFromRelationsResp) Reset() {
	*x = GetFromRelationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFromRelationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFromRelationsResp) ProtoMessage() {}

func (x *GetFromRelationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFromRelationsResp.ProtoReflect.Descriptor instead.
func (*GetFromRelationsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{36}
}

func (x *GetFromRelationsResp) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetFromRelationsResp) GetFiles() []*PublicFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetFromRelationsResp) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

type GetToRelationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToType       int64      `protobuf:"varint,1,opt,name=toType,proto3" json:"toType" form:"toType" query:"toType" vd:"$ >= 1 && $ <= 4"`
	ToId         string     `protobuf:"bytes,2,opt,name=toId,proto3" json:"toId" form:"toId" query:"toId"`
	FromType     TargetType `protobuf:"varint,3,opt,name=fromType,proto3,enum=cloudmind.core_api.TargetType" json:"fromType" form:"fromType" query:"fromType" vd:"$ == 1"`
	RelationType int64      `protobuf:"varint,4,opt,name=relationType,proto3" json:"relationType" form:"relationType" query:"relationType" vd:"$ >= 1 && $ <= 10"`
	Limit        *int64     `protobuf:"varint,5,opt,name=limit,proto3,oneof" json:"limit" form:"limit" query:"limit"`
	Offset       *int64     `protobuf:"varint,6,opt,name=offset,proto3,oneof" json:"offset" form:"offset" query:"offset"`
}

func (x *GetToRelationsReq) Reset() {
	*x = GetToRelationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToRelationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToRelationsReq) ProtoMessage() {}

func (x *GetToRelationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToRelationsReq.ProtoReflect.Descriptor instead.
func (*GetToRelationsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{37}
}

func (x *GetToRelationsReq) GetToType() int64 {
	if x != nil {
		return x.ToType
	}
	return 0
}

func (x *GetToRelationsReq) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *GetToRelationsReq) GetFromType() TargetType {
	if x != nil {
		return x.FromType
	}
	return TargetType_UnKnowTargetType
}

func (x *GetToRelationsReq) GetRelationType() int64 {
	if x != nil {
		return x.RelationType
	}
	return 0
}

func (x *GetToRelationsReq) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetToRelationsReq) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetToRelationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users" form:"users" query:"users"`
}

func (x *GetToRelationsResp) Reset() {
	*x = GetToRelationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToRelationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToRelationsResp) ProtoMessage() {}

func (x *GetToRelationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToRelationsResp.ProtoReflect.Descriptor instead.
func (*GetToRelationsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{38}
}

func (x *GetToRelationsResp) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromId       string `protobuf:"bytes,1,opt,name=fromId,proto3" json:"fromId" form:"fromId" query:"fromId"`
	FromType     int64  `protobuf:"varint,2,opt,name=fromType,proto3" json:"fromType" form:"fromType" query:"fromType" vd:"$ >= 1 && $ <= 4"`
	ToId         string `protobuf:"bytes,3,opt,name=toId,proto3" json:"toId" form:"toId" query:"toId"`
	ToType       int64  `protobuf:"varint,4,opt,name=toType,proto3" json:"toType" form:"toType" query:"toType" vd:"$ >= 1 && $ <= 4"`
	RelationType int64  `protobuf:"varint,5,opt,name=relationType,proto3" json:"relationType" form:"relationType" query:"relationType" vd:"$ >= 1 && $ <= 10"`
}

func (x *GetRelationReq) Reset() {
	*x = GetRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationReq) ProtoMessage() {}

func (x *GetRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationReq.ProtoReflect.Descriptor instead.
func (*GetRelationReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{39}
}

func (x *GetRelationReq) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *GetRelationReq) GetFromType() int64 {
	if x != nil {
		return x.FromType
	}
	return 0
}

func (x *GetRelationReq) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *GetRelationReq) GetToType() int64 {
	if x != nil {
		return x.ToType
	}
	return 0
}

func (x *GetRelationReq) GetRelationType() int64 {
	if x != nil {
		return x.RelationType
	}
	return 0
}

type GetRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok" form:"ok" query:"ok"`
}

func (x *GetRelationResp) Reset() {
	*x = GetRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationResp) ProtoMessage() {}

func (x *GetRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationResp.ProtoReflect.Descriptor instead.
func (*GetRelationResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{40}
}

func (x *GetRelationResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type DeleteRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToId         string `protobuf:"bytes,1,opt,name=toId,proto3" json:"toId" form:"toId" query:"toId"`
	ToType       int64  `protobuf:"varint,2,opt,name=toType,proto3" json:"toType" form:"toType" query:"toType" vd:"$ >= 1 && $ <= 4"`
	RelationType int64  `protobuf:"varint,3,opt,name=relationType,proto3" json:"relationType" form:"relationType" query:"relationType" vd:"$ >= 1 && $ <= 10"`
}

func (x *DeleteRelationReq) Reset() {
	*x = DeleteRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationReq) ProtoMessage() {}

func (x *DeleteRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationReq.ProtoReflect.Descriptor instead.
func (*DeleteRelationReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteRelationReq) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *DeleteRelationReq) GetToType() int64 {
	if x != nil {
		return x.ToType
	}
	return 0
}

func (x *DeleteRelationReq) GetRelationType() int64 {
	if x != nil {
		return x.RelationType
	}
	return 0
}

type DeleteRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRelationResp) Reset() {
	*x = DeleteRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelationResp) ProtoMessage() {}

func (x *DeleteRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelationResp.ProtoReflect.Descriptor instead.
func (*DeleteRelationResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{42}
}

type GetRelationPathsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationType RelationType `protobuf:"varint,1,opt,name=relationType,proto3,enum=cloudmind.core_api.RelationType" json:"relationType" form:"relationType" query:"relationType" vd:"$ >= 1 && $ <= 10"`
	Limit        *int64       `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit" form:"limit" query:"limit"`
	Offset       *int64       `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset" form:"offset" query:"offset"`
}

func (x *GetRelationPathsReq) Reset() {
	*x = GetRelationPathsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationPathsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationPathsReq) ProtoMessage() {}

func (x *GetRelationPathsReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationPathsReq.ProtoReflect.Descriptor instead.
func (*GetRelationPathsReq) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{43}
}

func (x *GetRelationPathsReq) GetRelationType() RelationType {
	if x != nil {
		return x.RelationType
	}
	return RelationType_UnKnowRelationType
}

func (x *GetRelationPathsReq) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetRelationPathsReq) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetRelationPathsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User       `protobuf:"bytes,1,rep,name=users,proto3" json:"users" form:"users" query:"users"`
	Files []*PublicFile `protobuf:"bytes,2,rep,name=files,proto3" json:"files" form:"files" query:"files"`
	Posts []*Post       `protobuf:"bytes,3,rep,name=posts,proto3" json:"posts" form:"posts" query:"posts"`
}

func (x *GetRelationPathsResp) Reset() {
	*x = GetRelationPathsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudmind_core_api_platform_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelationPathsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelationPathsResp) ProtoMessage() {}

func (x *GetRelationPathsResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloudmind_core_api_platform_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelationPathsResp.ProtoReflect.Descriptor instead.
func (*GetRelationPathsResp) Descriptor() ([]byte, []int) {
	return file_cloudmind_core_api_platform_proto_rawDescGZIP(), []int{44}
}

func (x *GetRelationPathsResp) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetRelationPathsResp) GetFiles() []*PublicFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetRelationPathsResp) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

var File_cloudmind_core_api_platform_proto protoreflect.FileDescriptor

var file_cloudmind_core_api_platform_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x16, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x81, 0x04, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e,
	0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x04, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23,
	0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x6f, 0x6e, 0x6c,
	0x79, 0x41, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d,
	0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x52,
	0x6f, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x6f,
	0x6e, 0x6c, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c,
	0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x09, 0x6f,
	0x6e, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x61, 0x63,
	0x6b, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x08, 0x62,
	0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x41,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x6e, 0x6c,
	0x79, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x76, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf7, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x61, 0x63,
	0x6b, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x08, 0x62,
	0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x46, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e,
	0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x49, 0x64, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x30, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x55, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x34, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x70,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6f,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x6f,
	0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22,
	0x99, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x37, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x42, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2b, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x2a, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x5c, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x87, 0x02, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d,
	0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x49, 0x6e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22,
	0xf0, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x06,
	0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x14, 0xda, 0xbb,
	0x18, 0x10, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d,
	0x20, 0x34, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x15, 0xda, 0xbb, 0x18, 0x11, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26,
	0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x30, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb5, 0x02,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a,
	0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x14, 0xda, 0xbb, 0x18, 0x10, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24,
	0x20, 0x3c, 0x3d, 0x20, 0x34, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x4c, 0x0a, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x14, 0xda, 0xbb, 0x18, 0x10, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24,
	0x20, 0x3c, 0x3d, 0x20, 0x34, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a,
	0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x15, 0xda, 0xbb, 0x18, 0x11, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20,
	0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x30, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x34,
	0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x22, 0xa5, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x14, 0xda, 0xbb, 0x18, 0x10,
	0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x34,
	0x52, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a,
	0xda, 0xbb, 0x18, 0x06, 0x24, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x15, 0xda, 0xbb, 0x18, 0x11,
	0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x31,
	0x30, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a,
	0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x14, 0xda, 0xbb, 0x18, 0x10, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24,
	0x20, 0x3c, 0x3d, 0x20, 0x34, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x6f, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x14, 0xda, 0xbb, 0x18, 0x10, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20,
	0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x34, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x15, 0xda, 0xbb, 0x18, 0x11, 0x24, 0x20, 0x3e,
	0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x30, 0x52, 0x0c,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22,
	0x90, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x14, 0xda, 0xbb, 0x18, 0x10, 0x24,
	0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x34, 0x52,
	0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x15, 0xda,
	0xbb, 0x18, 0x11, 0x24, 0x20, 0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c,
	0x3d, 0x20, 0x31, 0x30, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xbf, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x5b, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69,
	0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x15, 0xda, 0xbb, 0x18, 0x11, 0x24, 0x20,
	0x3e, 0x3d, 0x20, 0x31, 0x20, 0x26, 0x26, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x30, 0x52,
	0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x6d, 0x69, 0x6e, 0x64, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x53, 0x5a, 0x51, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x74, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2d, 0x63,
	0x6f, 0x72, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x6d, 0x69, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloudmind_core_api_platform_proto_rawDescOnce sync.Once
	file_cloudmind_core_api_platform_proto_rawDescData = file_cloudmind_core_api_platform_proto_rawDesc
)

func file_cloudmind_core_api_platform_proto_rawDescGZIP() []byte {
	file_cloudmind_core_api_platform_proto_rawDescOnce.Do(func() {
		file_cloudmind_core_api_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloudmind_core_api_platform_proto_rawDescData)
	})
	return file_cloudmind_core_api_platform_proto_rawDescData
}

var file_cloudmind_core_api_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_cloudmind_core_api_platform_proto_goTypes = []interface{}{
	(*CreateCommentReq)(nil),         // 0: cloudmind.core_api.CreateCommentReq
	(*CreateCommentResp)(nil),        // 1: cloudmind.core_api.CreateCommentResp
	(*GetCommentReq)(nil),            // 2: cloudmind.core_api.GetCommentReq
	(*GetCommentResp)(nil),           // 3: cloudmind.core_api.GetCommentResp
	(*GetCommentsReq)(nil),           // 4: cloudmind.core_api.GetCommentsReq
	(*GetCommentsResp)(nil),          // 5: cloudmind.core_api.GetCommentsResp
	(*GetCommentBlocksReq)(nil),      // 6: cloudmind.core_api.GetCommentBlocksReq
	(*GetCommentBlocksResp)(nil),     // 7: cloudmind.core_api.GetCommentBlocksResp
	(*UpdateCommentReq)(nil),         // 8: cloudmind.core_api.UpdateCommentReq
	(*UpdateCommentResp)(nil),        // 9: cloudmind.core_api.UpdateCommentResp
	(*DeleteCommentReq)(nil),         // 10: cloudmind.core_api.DeleteCommentReq
	(*DeleteCommentResp)(nil),        // 11: cloudmind.core_api.DeleteCommentResp
	(*SetCommentAttrsReq)(nil),       // 12: cloudmind.core_api.SetCommentAttrsReq
	(*SetCommentAttrsResp)(nil),      // 13: cloudmind.core_api.SetCommentAttrsResp
	(*GetCommentSubjectReq)(nil),     // 14: cloudmind.core_api.GetCommentSubjectReq
	(*GetCommentSubjectResp)(nil),    // 15: cloudmind.core_api.GetCommentSubjectResp
	(*UpdateCommentSubjectReq)(nil),  // 16: cloudmind.core_api.UpdateCommentSubjectReq
	(*UpdateCommentSubjectResp)(nil), // 17: cloudmind.core_api.UpdateCommentSubjectResp
	(*DeleteCommentSubjectReq)(nil),  // 18: cloudmind.core_api.DeleteCommentSubjectReq
	(*DeleteCommentSubjectResp)(nil), // 19: cloudmind.core_api.DeleteCommentSubjectResp
	(*CreateLabelReq)(nil),           // 20: cloudmind.core_api.CreateLabelReq
	(*CreateLabelResp)(nil),          // 21: cloudmind.core_api.CreateLabelResp
	(*DeleteLabelReq)(nil),           // 22: cloudmind.core_api.DeleteLabelReq
	(*DeleteLabelResp)(nil),          // 23: cloudmind.core_api.DeleteLabelResp
	(*GetLabelReq)(nil),              // 24: cloudmind.core_api.GetLabelReq
	(*GetLabelResp)(nil),             // 25: cloudmind.core_api.GetLabelResp
	(*UpdateLabelReq)(nil),           // 26: cloudmind.core_api.UpdateLabelReq
	(*UpdateLabelResp)(nil),          // 27: cloudmind.core_api.UpdateLabelResp
	(*GetLabelsReq)(nil),             // 28: cloudmind.core_api.GetLabelsReq
	(*GetLabelsResp)(nil),            // 29: cloudmind.core_api.GetLabelsResp
	(*GetLabelsInBatchReq)(nil),      // 30: cloudmind.core_api.GetLabelsInBatchReq
	(*GetLabelsInBatchResp)(nil),     // 31: cloudmind.core_api.GetLabelsInBatchResp
	(*Relation)(nil),                 // 32: cloudmind.core_api.Relation
	(*CreateRelationReq)(nil),        // 33: cloudmind.core_api.CreateRelationReq
	(*CreateRelationResp)(nil),       // 34: cloudmind.core_api.CreateRelationResp
	(*GetFromRelationsReq)(nil),      // 35: cloudmind.core_api.GetFromRelationsReq
	(*GetFromRelationsResp)(nil),     // 36: cloudmind.core_api.GetFromRelationsResp
	(*GetToRelationsReq)(nil),        // 37: cloudmind.core_api.GetToRelationsReq
	(*GetToRelationsResp)(nil),       // 38: cloudmind.core_api.GetToRelationsResp
	(*GetRelationReq)(nil),           // 39: cloudmind.core_api.GetRelationReq
	(*GetRelationResp)(nil),          // 40: cloudmind.core_api.GetRelationResp
	(*DeleteRelationReq)(nil),        // 41: cloudmind.core_api.DeleteRelationReq
	(*DeleteRelationResp)(nil),       // 42: cloudmind.core_api.DeleteRelationResp
	(*GetRelationPathsReq)(nil),      // 43: cloudmind.core_api.GetRelationPathsReq
	(*GetRelationPathsResp)(nil),     // 44: cloudmind.core_api.GetRelationPathsResp
	(*SimpleUser)(nil),               // 45: cloudmind.core_api.SimpleUser
	(*CommentRelation)(nil),          // 46: cloudmind.core_api.CommentRelation
	(*Comment)(nil),                  // 47: cloudmind.core_api.Comment
	(*CommentBlock)(nil),             // 48: cloudmind.core_api.CommentBlock
	(State)(0),                       // 49: cloudmind.core_api.State
	(Attrs)(0),                       // 50: cloudmind.core_api.Attrs
	(*Label)(nil),                    // 51: cloudmind.core_api.Label
	(TargetType)(0),                  // 52: cloudmind.core_api.TargetType
	(RelationType)(0),                // 53: cloudmind.core_api.RelationType
	(*User)(nil),                     // 54: cloudmind.core_api.User
	(*PublicFile)(nil),               // 55: cloudmind.core_api.PublicFile
	(*Post)(nil),                     // 56: cloudmind.core_api.Post
}
var file_cloudmind_core_api_platform_proto_depIdxs = []int32{
	45, // 0: cloudmind.core_api.GetCommentResp.author:type_name -> cloudmind.core_api.SimpleUser
	46, // 1: cloudmind.core_api.GetCommentResp.commentRelation:type_name -> cloudmind.core_api.CommentRelation
	47, // 2: cloudmind.core_api.GetCommentsResp.comments:type_name -> cloudmind.core_api.Comment
	48, // 3: cloudmind.core_api.GetCommentBlocksResp.commentBlocks:type_name -> cloudmind.core_api.CommentBlock
	49, // 4: cloudmind.core_api.UpdateCommentReq.state:type_name -> cloudmind.core_api.State
	50, // 5: cloudmind.core_api.SetCommentAttrsReq.attrs:type_name -> cloudmind.core_api.Attrs
	49, // 6: cloudmind.core_api.UpdateCommentSubjectReq.state:type_name -> cloudmind.core_api.State
	50, // 7: cloudmind.core_api.UpdateCommentSubjectReq.attrs:type_name -> cloudmind.core_api.Attrs
	51, // 8: cloudmind.core_api.GetLabelsResp.labels:type_name -> cloudmind.core_api.Label
	52, // 9: cloudmind.core_api.Relation.fromType:type_name -> cloudmind.core_api.TargetType
	52, // 10: cloudmind.core_api.Relation.toType:type_name -> cloudmind.core_api.TargetType
	53, // 11: cloudmind.core_api.Relation.relationType:type_name -> cloudmind.core_api.RelationType
	52, // 12: cloudmind.core_api.CreateRelationReq.toType:type_name -> cloudmind.core_api.TargetType
	53, // 13: cloudmind.core_api.CreateRelationReq.relationType:type_name -> cloudmind.core_api.RelationType
	52, // 14: cloudmind.core_api.GetFromRelationsReq.toType:type_name -> cloudmind.core_api.TargetType
	54, // 15: cloudmind.core_api.GetFromRelationsResp.users:type_name -> cloudmind.core_api.User
	55, // 16: cloudmind.core_api.GetFromRelationsResp.files:type_name -> cloudmind.core_api.PublicFile
	56, // 17: cloudmind.core_api.GetFromRelationsResp.posts:type_name -> cloudmind.core_api.Post
	52, // 18: cloudmind.core_api.GetToRelationsReq.fromType:type_name -> cloudmind.core_api.TargetType
	54, // 19: cloudmind.core_api.GetToRelationsResp.users:type_name -> cloudmind.core_api.User
	53, // 20: cloudmind.core_api.GetRelationPathsReq.relationType:type_name -> cloudmind.core_api.RelationType
	54, // 21: cloudmind.core_api.GetRelationPathsResp.users:type_name -> cloudmind.core_api.User
	55, // 22: cloudmind.core_api.GetRelationPathsResp.files:type_name -> cloudmind.core_api.PublicFile
	56, // 23: cloudmind.core_api.GetRelationPathsResp.posts:type_name -> cloudmind.core_api.Post
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}


func file_cloudmind_core_api_platform_proto_init() {
	if File_cloudmind_core_api_platform_proto != nil {
		return
	}
	file_cloudmind_core_api_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cloudmind_core_api_platform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentBlocksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentBlocksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCommentAttrsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCommentAttrsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentSubjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentSubjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentSubjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelsInBatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLabelsInBatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFromRelationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFromRelationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToRelationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToRelationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationPathsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudmind_core_api_platform_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelationPathsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloudmind_core_api_platform_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_cloudmind_core_api_platform_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_cloudmind_core_api_platform_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_cloudmind_core_api_platform_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_cloudmind_core_api_platform_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_cloudmind_core_api_platform_proto_msgTypes[43].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloudmind_core_api_platform_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloudmind_core_api_platform_proto_goTypes,
		DependencyIndexes: file_cloudmind_core_api_platform_proto_depIdxs,
		MessageInfos:      file_cloudmind_core_api_platform_proto_msgTypes,
	}.Build()
	File_cloudmind_core_api_platform_proto = out.File
	file_cloudmind_core_api_platform_proto_rawDesc = nil
	file_cloudmind_core_api_platform_proto_goTypes = nil
	file_cloudmind_core_api_platform_proto_depIdxs = nil
}
