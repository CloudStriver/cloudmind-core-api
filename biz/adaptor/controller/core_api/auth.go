// Code generated by hertz generator.

package core_api

import (
	"context"
	"github.com/CloudStriver/cloudmind-core-api/biz/adaptor"
	"github.com/CloudStriver/cloudmind-core-api/provider"
	"github.com/cloudwego/hertz/pkg/protocol/consts"

	"github.com/CloudStriver/cloudmind-core-api/biz/application/dto/cloudmind/core_api"
	"github.com/cloudwego/hertz/pkg/app"
)

// RegisterHandler 测试 handler
// @Summary 注册账号
// @Description 注册
// @Accept application/json
// @Produce application/json
// @Router /auth/register [POST]
func Register(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.RegisterReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.RegisterResp)
	p := provider.Get()
	resp, err = p.AuthService.Register(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// Login .
// @router /auth/login [POST]
func Login(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.LoginReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.LoginResp)
	p := provider.Get()
	resp, err = p.AuthService.Login(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// RefreshToken .
// @router /auth/refresh [POST]
func RefreshToken(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.RefreshTokenReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.RefreshTokenResp)
	p := provider.Get()
	resp, err = p.AuthService.RefreshToken(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}
