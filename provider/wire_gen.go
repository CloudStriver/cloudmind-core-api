// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	service2 "github.com/CloudStriver/cloudmind-core-api/biz/application/service"
	"github.com/CloudStriver/cloudmind-core-api/biz/domain/service"
	"github.com/CloudStriver/cloudmind-core-api/biz/infrastructure/config"
	"github.com/CloudStriver/cloudmind-core-api/biz/infrastructure/rpc/cloudmind_content"
	"github.com/CloudStriver/cloudmind-core-api/biz/infrastructure/rpc/cloudmind_sts"
	"github.com/CloudStriver/cloudmind-core-api/biz/infrastructure/rpc/platform_relation"
	"github.com/CloudStriver/cloudmind-core-api/biz/infrastructure/store/redis"
)

// Injectors from wire.go:

func NewProvider() (*Provider, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	client := cloudmind_content.NewCloudMindContent(configConfig)
	cloudMindContent := &cloudmind_content.CloudMindContent{
		Client: client,
	}
	relationserviceClient := platform_relation.NewPlatFormRelation(configConfig)
	platFormRelation := &platform_relation.PlatFormRelation{
		Client: relationserviceClient,
	}
	fileDomainService := &service.FileDomainService{
		CloudMindUser:    cloudMindContent,
		PlatformRelation: platFormRelation,
	}
	fileService := &service2.FileService{
		Config:            configConfig,
		CloudMindContent:  cloudMindContent,
		FileDomainService: fileDomainService,
	}
	postDomainService := &service.PostDomainService{
		CloudMindUser:    cloudMindContent,
		PlatformRelation: platFormRelation,
	}
	postService := &service2.PostService{
		Config:            configConfig,
		CloudMindContent:  cloudMindContent,
		PostDomainService: postDomainService,
	}
	stsserviceClient := cloudmind_sts.NewCloudMindSts(configConfig)
	cloudMindSts := &cloudmind_sts.CloudMindSts{
		Client: stsserviceClient,
	}
	redisRedis := redis.NewRedis(configConfig)
	authService := &service2.AuthService{
		Config:           configConfig,
		CloudMindContent: cloudMindContent,
		CloudMindSts:     cloudMindSts,
		Redis:            redisRedis,
	}
	relationService := &service2.RelationService{
		Config:           configConfig,
		PlatFormRelation: platFormRelation,
		CloudMindContent: cloudMindContent,
	}
	userService := &service2.UserService{
		Config:           configConfig,
		CloudMindContent: cloudMindContent,
	}
	zoneService := &service2.ZoneService{
		Config:           configConfig,
		CloudMindContent: cloudMindContent,
	}
	stsService := &service2.StsService{
		PlatformSts:      cloudMindSts,
		CloudMindContent: cloudMindContent,
	}
	providerProvider := &Provider{
		Config:          configConfig,
		ContentService:  fileService,
		PostService:     postService,
		AuthService:     authService,
		RelationService: relationService,
		UserService:     userService,
		ZoneService:     zoneService,
		StsService:      stsService,
	}
	return providerProvider, nil
}
